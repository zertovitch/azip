-- This is a GNAT, GCC or GNAT Studio project file
-- for the AZip project ( http://azip.sf.net/ ), version using GWindows.
-- Build me with "gnatmake -P azip_gwindows", or open me with GNAT Studio

--  *** External libraries ***
--  * 
--  *     You need to make the following projects' source files visible to this project
--  *     through the ad-hoc (not GNAT / AdaCore official) GNAT_SOURCE_PATH environment variable:
--  *   
--  *   * GWindows and contributions:
--  *       [gnavi]\gwindows\framework
--  *       [gnavi]\gwindows\contrib
--  *       [gnavi]\gnatcom\framework
--  *       Project URL: http://sf.net/projects/gnavi/
--  *       NB: The Unicode (default) mode of GWindows is needed; in doubt, run [gnavi]\gwindows\unicode.cmd
--  *   
--  *   * Ini file manager:
--  *       Project URL: http://ini-files.sourceforge.net/
--  *   
--  *   * Zip-Ada:
--  *       [zip-ada]\zip_lib
--  *       Project URL: http://unzip-ada.sf.net
--  * 
--  *  Example: GNAT_SOURCE_PATH=C:\Ada\gnavi\gwindows\framework;C:\Ada\gnavi\gwindows\contrib;C:\Ada\gnavi\gnatcom\framework;C:\Ada\za\zip_lib;C:\Ada\ini

project AZip_GWindows is

   type Build_Mode_Type is
      ("Debug_GPL", "Debug_MinGW", "Fast_GPL", "Fast_MinGW", "Profiling");
   Build_Mode : Build_Mode_Type := external ("Build_Mode", "Debug_GPL");
   for Source_Dirs use ("../sys_common", ".", "../testing") & external_as_list("GNAT_SOURCE_PATH", ";");
   for Exec_Dir use ".";
   for Main use ("azip.adb", "test_expand_folders.adb");
   for Create_Missing_Dirs use "True";  --  Flips by default the "-p" switch

   case Build_Mode is
      when "Debug_GPL" =>
         for Object_Dir use "../obj/debug";
      when "Debug_MinGW" =>
         for Object_Dir use "../obj/debug_ming";
      when "Fast_GPL" =>
         for Object_Dir use "../obj/fast";
      when "Fast_MinGW" =>
         for Object_Dir use "../obj/fast_ming";
      when "Profiling" =>
         for Object_Dir use "../obj/profiling";
   end case;

   package Binder is
      case Build_Mode is
         when "Debug_GPL" | "Debug_MinGW" =>
            --  -Es: Store tracebacks in exception occurrences, and enable symbolic tracebacks
            for Default_Switches ("ada") use ("-Es", "-d40m");
         when "Fast_GPL" | "Fast_MinGW" =>
         when "Profiling" =>
      end case;
   end Binder;

   package Linker is
      case Build_Mode is
         when "Debug_GPL" | "Debug_MinGW"  =>
            for Default_Switches ("ada") use ("-g",                                   "azip.rbj", "-Xlinker", "--stack=0x2000000,0x20000");
         when "Fast_GPL" | "Fast_MinGW" =>
            for Default_Switches ("ada") use ("-mwindows", "-s", "-Wl,--gc-sections", "azip.rbj", "-Xlinker", "--stack=0x2000000,0x20000");
         when "Profiling" =>
            for Default_Switches ("ada") use ("-mwindows", "-pg",                     "azip.rbj", "-Xlinker", "--stack=0x2000000,0x20000");
      end case;
   end Linker;

   Common_Options := (
     "-gnatwa",                        --  Warnings switches (a:turn on all info/warnings marked with +)
 --  "-gnatwh",                        --  Warnings switches (h:turn on warnings for hiding declarations)
     "-gnatwcijkmopruvz.c.n.p.t.w.x",  --  Warnings switches (run "gnatmake" for full list)
     "-gnatf",  --  Full errors. Verbose details, all undefined references
     "-gnatq",  --  Don't quit, try semantics, even if parse errors
     "-gnatQ"   --  Don't quit, write ali/tree file even if compile errors
   );

   Debug_Options  :=
     Common_Options & (
       "-gnatVa",  --  Turn on all validity checking options
       "-gnato",   --  Enable overflow checking in STRICT (-gnato1) mode
       "-gnata",   --  Assertions enabled. Pragma Assert and pragma Debug to be activated.
       "-fno-inline",
       "-fstack-check"
       );

   package Compiler is
      case Build_Mode is
         when "Debug_GPL" | "Debug_MinGW"  =>
            for Local_Configuration_Pragmas use project'Project_Dir & "../obj/debug/debug.pra";
            for Default_Switches ("ada") use Debug_Options & (
              "-gnatyaknpr",  --  Style: check all casings: a:attribute, k:keywords, n:package Standard identifiers, p:pragma, r:identifier references
              "-gnatybfhiu",  --  Style: check b:no blanks at end of lines, f:no ff/vtabs, h: no htabs, i:if-then layout, u:no unnecessary blank lines
              "-gnatyx",      --  Style: check x:no extra parens
              "-gnatye",      --  Style: check e:end/exit labels present
              "-gnatyc",      --  Style: check c:comment format (two spaces)
              "-g"
              );
         when "Fast_GPL" | "Fast_MinGW" =>
            for Local_Configuration_Pragmas use project'Project_Dir & "azip_elim.pra";
            for Default_Switches ("ada") use Common_Options & (
              "-O2", "-gnatpn", 
              "-funroll-loops", "-fpeel-loops", "-funswitch-loops", "-ftracer", "-fweb", "-frename-registers", 
              "-fpredictive-commoning", "-fgcse-after-reload", "-ftree-vectorize", "-fipa-cp-clone",
              "-ffunction-sections"
              );
         when "Profiling" =>
            for Local_Configuration_Pragmas use project'Project_Dir & "azip_elim.pra";
            for Default_Switches ("ada") use Common_Options & (
              "-O2", "-gnatp",  
              "-funroll-loops", "-fpeel-loops", "-funswitch-loops", "-ftracer", "-fweb", "-frename-registers", 
              "-fpredictive-commoning", "-fgcse-after-reload", "-ftree-vectorize", "-fipa-cp-clone",
              "-g", "-pg"
              );
      end case;
   end Compiler;

   package Builder is
      --   "If -j0 is used, then the maximum number of simultaneous compilation
      --    jobs is the number of core processors on the platform."
      for Default_Switches ("ada") use ("-j0");
   end Builder;
   
end AZip_GWindows;

